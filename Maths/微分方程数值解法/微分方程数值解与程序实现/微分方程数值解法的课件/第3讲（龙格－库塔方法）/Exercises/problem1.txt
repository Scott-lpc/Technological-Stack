// to solve a first order nonlinear diffential equation u'(t)=f(u,t)
//using 4th order Runge-Kutta method

#include "stdafx.h"
#include<math.h>
#include<stdlib.h>
#include<stdio.h>

void main ( )
{
   double *u, uex,T,dt,err,k1,k2,k3,k4;
   int i,NT;
   double uexact(double t);
   double f(double t, double u);

   T=1.0;
   NT=10; 
   dt=T/NT;
   u=(double *)malloc(sizeof(double)*(NT+1));
  
   u[0]=1.0;
   for(i=0;i<NT;i++)
   {
	   k1=f(i*dt,u[i]);
	   k2=f(i*dt+0.5*dt, u[i]+0.5*dt*k1);
	   k3=f(i*dt+0.5*dt, u[i]+0.5*dt*k2);
	   k4=f((i+1)*dt, u[i]+dt*k3);
	   u[i+1]=u[i]+dt*(k1+2*k2+2*k3+k4)/6.0;
	   uex=uexact((i+1)*dt);
	   err=fabs(uex-u[i+1]); 
	   printf("t=%.2f, num_solution=%.8f,  exact=%.8f,  error=%.8f\n",(i+1)*dt, u[i+1],uex,err);
   }
   free(u);	  
}



double uexact(double t)
{
	double z;
	z=t*t-2*t+2-exp(-t);
	return z;
}
	
double f(double t, double u)
{
	double z;
	z=t*t-u;
	return z;
}